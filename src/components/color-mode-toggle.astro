---
import { Button } from '~/components/button'
import MoonIcon from './icons/moon-icon.astro'
import SunIcon from './icons/sun-icon.astro'

const { class: className } = Astro.props
---

<script>
  document.addEventListener('astro:page-load', () => {
    const getColorMode = () => {
      if (
        typeof localStorage !== 'undefined' &&
        localStorage.getItem('color-mode')
      ) {
        return localStorage.getItem('color-mode') ?? 'light'
      }

      return matchMedia('(prefers-color-scheme: dark)').matches
        ? 'dark'
        : 'light'
    }

    const colorMode = getColorMode()
    document.documentElement.dataset.colorMode = colorMode
    localStorage.setItem('color-mode', colorMode)

    const handleColorModeToggleClick = () => {
      const newColorMode =
        document.documentElement.dataset.colorMode === 'light'
          ? 'dark'
          : 'light'

      document.documentElement.dataset.colorMode = newColorMode
      localStorage.setItem('color-mode', newColorMode)
    }

    for (const colorModeToggle of document.querySelectorAll(
      '[data-color-mode-toggle]'
    )) {
      colorModeToggle.addEventListener('click', handleColorModeToggleClick)
    }

    const handleStorageChange = (event: StorageEvent) => {
      if (event.key !== 'color-mode') {
        return
      }

      document.documentElement.dataset.colorMode = event.newValue ?? 'light'
    }

    addEventListener('storage', handleStorageChange)
  })
</script>

<Button
  className={className}
  data-color-mode-toggle
  type="button"
  variant="text"
>
  <span
    class="hidden items-center justify-center gap-2 group-data-[color-mode=dark]/document:inline-flex"
  >
    <SunIcon />
    <span class="sm:sr-only">Light</span>
  </span>
  <span
    class="hidden items-center justify-center gap-2 group-data-[color-mode=light]/document:inline-flex"
  >
    <MoonIcon />
    <span class="sm:sr-only">Dark</span>
  </span>
</Button>
